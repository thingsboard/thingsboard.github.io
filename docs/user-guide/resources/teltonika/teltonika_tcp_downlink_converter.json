{
  "name": "TCP_DOWNLINK",
  "type": "DOWNLINK",
  "debugMode": true,
  "configuration": {
    "encoder": "    var codec = 12;\n    var quantity = 1;\n    var commandType = 5;\n\n    var result = setPayload();\n\n    function setPayload() {\n        if (msg.hasOwnProperty('payload') && metadata['payload'] !== null) {\n            return getPayload();\n        }\n        return null;\n    }\n\n    function getPayload() {\n        var rez = {\n            contentType: \"JSON\",\n            data:  getDataHexMany(),\n            metadata: {\n                serialNumber: metadata['cs_serialNumber'],\n                deviceName: metadata['originatorName'],\n                payload:  getPayloadTrim(),\n                codec: codec,\n                quantity: quantity,\n                commandType: commandType\n            }\n        };\n        return rez;\n    }\n\n    function convertToHex(str) {\n        var hex = '';\n        for(var i=0;i<str.length;i++) {\n            hex += ''+str.charCodeAt(i).toString(16);\n        }\n        return hex;\n    }\n\n    function convertToHexFixLen(str, len){\n        var strHex = len +str.toString(16);\n        return strHex.substring(strHex.length - len.length);\n    }\n\n    function getDataHexMany() {\n        var dataArrays = msg.payload.split(\",\");\n        var data = \"\";\n        for (var i = 0; i < dataArrays.length; i ++) {\n            data += (getDataHexOneForMany(dataArrays[i].trim()) + \",\")\n        }\n        data = data.substring(0, data.lastIndexOf(\",\"));\n\n        return data;\n\n    }\n\n    function getDataHexOneForMany(str) {\n        var codecHex = convertToHexFixLen(codec, \"00\");\n        var quantityHex = convertToHexFixLen(quantity, \"00\");\n        var typeHex = convertToHexFixLen(commandType, \"00\");\n        var commandSizeHex = convertToHexFixLen(str.length,\"00000000\");\n        var commandHex = convertToHex(str);\n        var dataHex = codecHex + quantityHex  + typeHex + commandSizeHex + commandHex + quantityHex;\n        return dataHex;\n    }\n    \n    function getPayloadTrim () {\n        var dataArrays = msg.payload.split(\",\");\n        var data = \"\";\n        for (var i = 0; i < dataArrays.length; i ++) {\n            data += (dataArrays[i].trim() + \",\")\n        }\n        data = data.substring(0, data.lastIndexOf(\",\"));\n        return data;\n    }\n\n    return result;"
  },
  "additionalInfo": null
}