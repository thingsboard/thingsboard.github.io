{
  "name": "TCP_GALILEOSKY_DOWNLINK",
  "type": "DOWNLINK",
  "debugMode": true,
  "configuration": {
    "encoder": "    var lenPacketStart = 26;\n    var result = setPayload();\n\n    function setPayload() {\n        if (msg.hasOwnProperty('payload') && metadata['payload'] !== null) {\n            return getPayload();\n        }\n        return null;\n    }\n\n    function getPayload() {\n        var rez = {\n            contentType: \"JSON\",\n            data:  getDataHexMany(),\n            metadata: {\n                serialNumber: metadata['cs_serialNumber'],\n                deviceName: metadata['originatorName'],\n                payload:  getPayloadTrim()\n            }\n        };\n        return rez;\n    }\n\n    function convertToHex(str) {\n        var hex = '';\n        for(var i=0;i<str.length;i++) {\n            hex += ''+str.charCodeAt(i).toString(16);\n        }\n        return hex;\n    }\n\n    function convertToHexFixLen(str, len){\n        var strHex = len +str.toString(16);\n        return strHex.substring(strHex.length - len.length);\n    }\n\n    function getDataHexMany() {\n        var dataArrays = msg.payload.split(\",\");\n        var data = \"\";\n        for (var i = 0; i < dataArrays.length; i ++) {\n            data += (getDataHexOneForMany(dataArrays[i].trim()) + \",\")\n        }\n        data = data.substring(0, data.lastIndexOf(\",\"));\n\n        return data;\n\n    }\n\n    function getDataHexOneForMany(str) {\n        var lenCommand = str.length;\n        var lenPacket = lenPacketStart + lenCommand;\n        var lenCommandHex = convertToHexFixLen(lenCommand, \"00\");\n        var lenPacketHex = hexStringToStringRev(convertToHexFixLen(lenPacket, \"0000\"));\n        var serialNumberHex = convertToHex(metadata['cs_serialNumber']);\n        var commandHex = convertToHex(str);\n        var dataHex = \"01\" + lenPacketHex  + \"03\" + serialNumberHex + \"04\" + \"0000\" + \"E0\" + \"00000000\" + \"E1\" + lenCommandHex + commandHex;\n        return dataHex;\n    }\n\n    function hexStringToStringRev(str) {\n        var strRev = \"\";\n        for (var i = (str.length - 2); i >= 0; i -= 2) {\n            strRev += str.substring(i, i + 2);\n        }\n        return strRev;\n    }\n\n    function getPayloadTrim () {\n        var dataArrays = msg.payload.split(\",\");\n        var data = \"\";\n        for (var i = 0; i < dataArrays.length; i ++) {\n            data += (dataArrays[i].trim() + \",\")\n        }\n        data = data.substring(0, data.lastIndexOf(\",\"));\n        return data;\n    }\n\n    return result;\n"
  },
  "additionalInfo": null
}