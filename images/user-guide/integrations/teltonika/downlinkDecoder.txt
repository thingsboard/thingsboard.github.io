    var codec = 12;
    var quantity = 1;
    var commandType = 5;
    var commandNumber = metadata['commandNumber'];
    var separator;

    var result = setPayload();

    function setPayload() {
        if (msg.hasOwnProperty('payload') && metadata['payload'] !== null) {
            return getPayload();
        }
        return null;
    }

    function getPayload() {
        separator = ";";
        var rez = {
            contentType: "JSON",
            data:  getDataHexMany(),
            metadata: {
                serialNumber: metadata['cs_serialNumber'],
                deviceName: metadata['originatorName'],
                payload:  getPayloadTrim(),
                codec: codec,
                commandNumber: commandNumber,
                commandType: commandType
            }
        };
        return rez;
    }

    function convertToHex(str) {
        var hex = '';
        for(var i=0;i<str.length;i++) {
            hex += ''+str.charCodeAt(i).toString(16);
        }
        return hex;
    }

    function convertToHexFixLen(str, len){
        var strHex = len +str.toString(16);
        return strHex.substring(strHex.length - len.length);
    }

    function getDataHexMany() {
        var dataArrays = msg.payload.split(separator);
        var data = "";
        for (var i = 0; i < dataArrays.length; i ++) {
            data += (getDataHexOneForMany(dataArrays[i].trim()) + separator)
        }
        data = data.substring(0, data.lastIndexOf(separator));

        return data;

    }

    function getDataHexOneForMany(str) {
        var codecHex = convertToHexFixLen(codec, "00");
        var quantityHex = convertToHexFixLen(quantity, "00");
        var typeHex = convertToHexFixLen(commandType, "00");
        var commandSizeHex = convertToHexFixLen(str.length,"00000000");
        var commandHex = convertToHex(str);
        var dataHex = codecHex + quantityHex  + typeHex + commandSizeHex + commandHex + quantityHex;
        return dataHex;
    }

    function getPayloadTrim () {
        var dataArrays = msg.payload.split(separator);
        var data = "";
        for (var i = 0; i < dataArrays.length; i ++) {
            data += (dataArrays[i].trim() + separator)
        }
        data = data.substring(0, data.lastIndexOf(separator));
        return data;
    }

    return result;
