    var lenPacketStart = 26;
    var result = setPayload();
    var commandNumber;
    var newPayload;
    var separator;

    function setPayload() {
        if (msg.hasOwnProperty('payload') && metadata['payload'] !== null) {
            return getPayload();
        }
        return null;
    }

    function getPayload() {
        newPayload = [];
         separator = ";";
        commandNumber = metadata['commandNumber'];
        var rez = {
            contentType: "JSON",
            data:  getDataHexMany(),
            metadata: {
                serialNumber: metadata['cs_serialNumber'],
                deviceName: metadata['originatorName'],
                commandNumber: commandNumber,
                // payload:  getPayloadTrim()
                payload:  getNewPayloadStr ()
            }
        };
        return rez;
    }

    function convertToHex(str) {
        var hex = '';
        for(var i=0;i<str.length;i++) {
            hex += ''+str.charCodeAt(i).toString(16);
        }
        return hex;
    }

    function convertToHexFixLen(str, len){
        var strHex = len +str.toString(16);
        return strHex.substring(strHex.length - len.length);
    }

    function getDataHexMany() {
        var dataArrays = msg.payload.split(separator);
        var data = "";
        for (var i = 0; i < dataArrays.length; i ++) {
            data += (getDataHexOneForMany(dataArrays[i].trim()) + separator)
        }
        data = data.substring(0, data.lastIndexOf(separator));
        return data;
    }

    function getDataHexOneForMany(str) {
        var lenCommand = str.length;
        var lenPacket = lenPacketStart + lenCommand;
        var lenCommandHex = convertToHexFixLen(lenCommand, "00");
        var lenPacketHex = hexStringToStringRev(convertToHexFixLen(lenPacket, "0000"));
        var serialNumberHex = convertToHex(metadata['cs_serialNumber']);
        var commandHex = convertToHex(str);
        var commNumber = parseInt(commandNumber, 10);
        commNumber ++;
        // commNumber *= 10000;
        var commNumberHex = convertToHexFixLen(commNumber, "00000000");
        var dataHex = "01" + lenPacketHex  + "03" + serialNumberHex + "04" + "0000" + "E0" + commNumberHex + "E1" + lenCommandHex + commandHex;
        var val = commNumberHex + ": " + str;
        newPayload.push (val);
        commandNumber = commNumber.toString();
        return dataHex;
    }

    function hexStringToStringRev(str) {
        var strRev = "";
        for (var i = (str.length - 2); i >= 0; i -= 2) {
            strRev += str.substring(i, i + 2);
        }
        return strRev;
    }

    function getPayloadTrim () {
        var dataArrays = msg.payload.split(separator);
        var data = "";
        for (var i = 0; i < dataArrays.length; i ++) {
            data += (dataArrays[i].trim() + separator)
        }
        data = data.substring(0, data.lastIndexOf(separator));
        return data;
    }
    function getNewPayloadStr () {
        var data = "";
        for (var i = 0; i < newPayload.length; i ++) {
            data += (newPayload[i].trim() + separator)
        }
        data = data.substring(0, data.lastIndexOf(separator));
        return data;
    }

    return result;